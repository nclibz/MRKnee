# -*- coding: utf-8 -*-
"""most important imgs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10kjOU7XupA-lFIDZ442ssiZX3L2QVzry
"""

from google.colab import drive
drive.mount('/content/drive')

!git clone https://github.com/nsandau/MRKnee/
import os
os.chdir('/content/MRKnee/')
!git checkout lstm
!nvidia-smi

!nvidia-smi

!pip install pytorch-lightning
!pip install timm
#!pip install trulens
import albumentations as A
import numpy as np
import pandas as pd
import torch
import matplotlib.pyplot as plt

from src.model import MRKnee
from src.data import MRDS

# INSTANTIATE MODEL

backbone = "efficientnet_b1"
plane = "axial"
diag = "meniscus"
ckpt = '/content/drive/MyDrive/MRKnee/models/' + diag + "_" + plane + ".ckpt"
img_sz = 240
device = "cuda"

ds = MRDS(datadir = "/content/drive/MyDrive/MRKnee/data",stage = "train",
                 diagnosis = diag,
                 transf=None,
                 planes=[plane],
                 n_chans=1,
                 indp_normalz=True,
                 w_loss=True,
                 same_range=True,
                 clean=False)

model = MRKnee.load_from_checkpoint(ckpt, planes=[plane], backbone=backbone).to(device = device).eval()

imgs = ds[59][0][0].to("cuda")
features = model.backbones[0](imgs)

features = features.unsqueeze(0)
idx = torch.max(features, dim = 1)[1]
counts = torch.unique(idx, return_counts = True)

counts

!nvidia-smi

